version: "3.1"

services:
  db:
    container_name: discord-pg-db
    image: postgres
    # automatically restarts the container - Docker daemon on restart or
    # the container itself is manually restarted
    restart: always

    volumes:
      - ./pgdata/db:/var/lib/postgresql/data
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql

    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: discord-clone-backend
    ports:
      - "5432:5432"
    networks:
      app_net:
        ipv4_address: 192.168.0.2

  pgadmin:
    container_name: pgadmin4
    image: dpage/pgadmin4
    restart: always

    volumes:
      - ./pgdata/pgadmin-data:/var/lib/pgadmin

    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      # PGADMIN_LISTEN_PORT = 80
    ports:
      - "5050:80"
    networks:
      app_net:
        ipv4_address: 192.168.0.3

  frontend:
    container_name: dc-frontend
    # image: dpage/pgadmin4 # change
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: always

    # volumes: # might not be necessary if we are only doing builds
    #   - ./app_volume/frontend:/var/lib/frontend

    # environment:
    # PGADMIN_DEFAULT_EMAIL: admin@admin.com
    # PGADMIN_DEFAULT_PASSWORD: admin
    # PGADMIN_LISTEN_PORT = 80
    env_file:
      - ./frontend/.env
    ports:
      - "3001:3001"
    networks:
      - app_net

  backend:
    container_name: dc-backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always

    # volumes:
    #   - ./app_volume/backend:/var/lib/app/backend

    # environment:
    # PGADMIN_DEFAULT_EMAIL: admin@admin.com
    # PGADMIN_DEFAULT_PASSWORD: admin
    # PGADMIN_LISTEN_PORT = 80
    ports:
      - "3000:3000"
    env_file:
      - ./backend/.env
    networks:
      - app_net

networks:
  app_net:
    ipam:
      driver: default
      config:
        - subnet: "192.168.0.0/24"
          gateway: 192.168.0.1
